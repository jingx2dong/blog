(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{357:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"python小记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python小记"}},[t._v("#")]),t._v(" Python小记")]),t._v(" "),s("p",[t._v("没想到作为一个Javaer，第一次工作笔记献给了Python~")]),t._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("p",[t._v("  之前有一个问题，供应商提供的方案需要申请一台服务器，则涉及每年一万多元的硬件费用以及一万多的开发费用。钱是不多，但是这样系统架构不太合理，工作中一个重要的原则是，尽量减少依赖、减少复杂度，如此涉及对于后续的维护和扩展都存有隐患。")]),t._v(" "),s("h2",{attrs:{id:"思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),s("p",[t._v("  可以通过修改Nginx的配置文件来实现内网环境下的要求，但是对于VPN情况下，又需要改为另外一个配置。则就需要动态的进行Nginx设置变更。那么就可以通过一个URL请求来触发Nginx的设置变更。"),s("br"),t._v("\n  那么整体思路如下：")]),t._v(" "),s("ol",[s("li",[t._v("复制两个Nginx文件，分别命名N1.conf N2.conf")]),t._v(" "),s("li",[t._v("开发两个脚本Shell分别为S1、S2，分别是复制N1.conf/N2.conf 覆盖nginx.conf，然后执行nginx的reload操作；")]),t._v(" "),s("li",[t._v("开发一个简单的后端，两个URL，分别执行S1，S2")]),t._v(" "),s("li",[t._v("VPN环境下，调用URL1，切换S1配置；内网调用URL2，再切换为S2；绝大部分情况都使用S2即可，这样的代价已经很小了。")])]),t._v(" "),s("h2",{attrs:{id:"选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选型"}},[t._v("#")]),t._v(" 选型")]),t._v(" "),s("p",[t._v("  即然作为Javaer，第一时间想到Java来实现。但简单调研后，觉得Java有三个问题，并不适合：")]),t._v(" "),s("ol",[s("li",[t._v("目前系统没有安装JDK/JRE需要安装并配置相关环境")]),t._v(" "),s("li",[t._v("Java执行Shell命令需要使用getRuntime得到Process再执行，效率很低")]),t._v(" "),s("li",[t._v("占用内存太多，有点拿大炮打蚊子的感觉。")])]),t._v(" "),s("p",[t._v("  很快想到用GO或者Python来实现，看来一下"),s("code",[t._v("Python -Version")]),t._v("系统中果然已经安装了Python。那就决定用Python来实现了。"),s("br"),t._v("\n  百度一下用VS Code来写了一个简单的后台，代码也就一行，执行Shell脚本-S1 S2。")]),t._v(" "),s("h2",{attrs:{id:"收获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收获"}},[t._v("#")]),t._v(" 收获")]),t._v(" "),s("ul",[s("li",[t._v("Python的Hello Wold，也算是实战过了~😂😂")]),t._v(" "),s("li",[t._v("cp 命令不能强制覆盖，就算cp -f src tgt也不行，只能/cp 。因为一般cp都通过alias来重写了")]),t._v(" "),s("li",[t._v("Python通过flask来开发web应用服务，以及相关的route写法")]),t._v(" "),s("li",[t._v("Python语法"),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("说明可以当作主程序允许\n  app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.0.0.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("可以被任意ip访问，指定端口\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[t._v("花了一个周末完全搞定，周一测试交业务测试；得到认可，使用方便而且节省了一小笔费用，灰常开心~😊")])])])}),[],!1,null,null,null);a.default=r.exports}}]);